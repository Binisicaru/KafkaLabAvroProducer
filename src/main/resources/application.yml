server:
  port: 8094

spring:
  main:
    allow-bean-definition-overriding: true
  kafka:
    bootstrap-servers:
    - <servidor1:puerto>
    - <servidor2:puerto>
    - <servidor3:puerto>
    properties:
      security:
        protocol: SASL_SSL
      sasl:
        mechanism: SCRAM-SHA-256
        jaas:
          config: org.apache.kafka.common.security.scram.ScramLoginModule required username="<username>" password="<password>";
  cloud:
    stream:
      default-binder: kafka
      bindings:
        input:
          destination: j8hnkljo-employee-details
          content-type: application/*+avro
        inputTopic:
          destination: j8hnkljo-employee-details
        output:
          destination: j8hnkljo-employee-details
          content-type: application/*+avro
        outputTopic:
          destination: j8hnkljo-employee-details
      kafka:
        binder:
           producer-properties:
            '[key.serializer]': io.confluent.kafka.serializers.KafkaAvroSerializer
            '[value.serializer]': io.confluent.kafka.serializers.KafkaAvroSerializer
            schema.registry.url: http://localhost:8081
           consumer-properties:
            '[key.deserializer]': io.confluent.kafka.serializers.KafkaAvroDeserializer
            '[value.deserializer]': io.confluent.kafka.serializers.KafkaAvroDeserializer
            '[schema.registry.url]': http://localhost:8081
            '[specific.avro.reader]': true
#spring:
#  cloud:
#    stream:
#      bindings:
#        input:
#          destination: employee-details
#          content-type: application/*+avro
#        output: 
#          destination: employee-details-out
#          content-type: application/*+avro
        